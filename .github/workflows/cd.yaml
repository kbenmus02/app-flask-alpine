name: CICD-Deploy_on_Heroku

on:
  push:
    branches:
      - master
      - test_lib_keras
      - tester_yaml
      
jobs:
  myCI:
    runs-on: ubuntu-latest
    container: docker://dvcorg/cml-py3:latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: '3.8.10'
    - name: cml_run
      env:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
      run: |
        #pip install -r requirements.txt
        #pip freeze > requirements_docker.txt
        python --version > python_version.txt
        touch temoin3.txt
    - name: get Xy
      env:
        GDRIVE_CREDENTIALS_DATA: ${{ secrets.GDRIVE_CREDENTIALS_DATA }}
      run: |
        dvc pull -f model
        ls -lrt model/    
    
    - name: preparer_gitpush
      run: |
        git config --local user.email "$GITHUB_EMAIL"
        git config --local user.name "$GITHUB_USERNAME"
        git add requirements_docker.txt python_version.txt temoin3.txt
        
        git commit --allow-empty -m "push at $(date +%d-%b-%H_%M)"
        git tag -a "v1.0" -m "tag avec temoin.txt depuis gitactions"
        git push --follow-tags
        git push

      env:
        GITHUB_USERNAME: "$GITHUB_USERNAME"
        GITHUB_EMAIL: "$GITHUB_EMAIL"
        
  my_CD:
    runs-on: ubuntu-latest
    #needs: [myCI]
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "app-flask-malaria" # Must be unique in Heroku
          heroku_email: "$GITHUB_EMAIL"
          usedocker: true
        env:
          GITHUB_EMAIL: "$GITHUB_EMAIL"
      - run: |
          echo **************************************************************************************
          python --version
          echo **************************************************************************************
      #      container_id=$(docker run -it --rm --detach busybox)
      #      echo container_id

